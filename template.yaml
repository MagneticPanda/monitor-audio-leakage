AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Audio monitoring solution SAM template


Globals:
  Function:
    Timeout: 900
    Runtime: nodejs18.x
    MemorySize: 128
    Architectures:
      - x86_64


Parameters:
  RegionPrefix:
    Type: String
    Description: 'Region prefix for all AWS resources'

  Stage:
    Type: String
    Description: 'Current stage of the deployment'

  LambdaRoleArn:
    Type: String
    Description: 'Role used for all lambda functions'

  ConnectInstanceId:
    Type: String
    Description: 'Amazon Connect instance ID'

  ConnectInstanceAlias:
    Type: String
    Description: 'Amazon Connect instance alias'

  ConnectLogGroup:
    Type: String
    Description: 'Amazon Connect log group'

  CallRecordingsBucket:
    Type: String
    Description: 'Name of S3 bucket for call recordings'

  StepFunctionRoleArn:
    Type: String
    Description: 'Role used for the step function'



Resources:
  CallRecordingTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub '${RegionPrefix}-${Stage}-call-recordings'
      PrimaryKey:
        Name: ContactId
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  SubscriptionFilterFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${RegionPrefix}-${Stage}-subscription-filter-handler'
      CodeUri: src/subFilterHandler
      Handler: index.handler
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          DDB_TABLE: !Ref CallRecordingTable

#  Cloudwatch subscription filter
  SubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      LogGroupName: !Ref ConnectLogGroup
      DestinationArn: !GetAtt SubscriptionFilterFunction.Arn
      FilterPattern: ''
      FilterName: !Sub '${RegionPrefix}-${Stage}-subscription-filter'

  StartStateMachineFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${RegionPrefix}-${Stage}-start-state-machine'
      CodeUri: src/startStateMachine
      Handler: index.handler
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          STATE_MACHINE_ARN: !Ref CallRecordingStateMachine
      Events:
        PerioidicInvoke:
          Type: ScheduleV2
          Properties:
            ScheduleExpression: cron(*/5 * * * *)

  UpdateInitialisedRecordsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${RegionPrefix}-${Stage}-update-initialised-records'
      CodeUri: src/updateInitialisedRecords
      Handler: index.handler
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          DDB_TABLE: !Ref CallRecordingTable
          CONNECT_ID: !Ref ConnectInstanceId

  CleanTableFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${RegionPrefix}-${Stage}-clean-table'
      CodeUri: src/cleanTable
      Handler: index.handler
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          DDB_TABLE: !Ref CallRecordingTable

  UpdateInProgressRecordsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${RegionPrefix}-${Stage}-update-in-progress'
      CodeUri: src/updateInProgressRecords
      Handler: index.handler
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          DDB_TABLE: !Ref CallRecordingTable
          CONNECT_ID: !Ref ConnectInstanceId

  UpdateCompletedRecordsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${RegionPrefix}-${Stage}-update-completed'
      CodeUri: src/updateCompletedRecords
      Handler: index.handler
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          DDB_TABLE: !Ref CallRecordingTable
          RECORDING_BUCKET: !Ref CallRecordingsBucket
          CONNECT_ALIAS: !Ref ConnectInstanceAlias

  CallRecordingStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: 'STANDARD'
      Name: !Sub '${RegionPrefix}-${Stage}-call-recording-state-machine'
      DefinitionUri: state-machine-asl.json
      Role: !Ref StepFunctionRoleArn
      DefinitionSubstitutions:
        UpdateInitialisedRecordsFunction: !GetAtt UpdateInitialisedRecordsFunction.Arn
        CleanTableFunction: !GetAtt CleanTableFunction.Arn
        UpdateInProgressRecordsFunction: !GetAtt UpdateInProgressRecordsFunction.Arn
        UpdateCompletedRecordsFunction: !GetAtt UpdateCompletedRecordsFunction.Arn
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt CallRecordingStateMachineLogGroup.Arn
        IncludeExecutionData: true
        Level: ALL

  CallRecordingStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/stepfunctions/${Stage}-call-recording-state-machine'
      RetentionInDays: 7
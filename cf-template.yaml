AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Audio monitoring solution SAM template
Globals:
  Function:
    Timeout: 900
    Runtime: nodejs18.x
    MemorySize: 128
    Architectures:
    - x86_64
Parameters:
  AccountAlias:
    Type: String
    Description: Account alias for all AWS resources
  RegionPrefix:
    Type: String
    Description: Region prefix for all AWS resources
  Stage:
    Type: String
    Description: Current stage of the deployment
  LambdaRoleArn:
    Type: String
    Description: Role used for all lambda functions
  ConnectInstanceId:
    Type: String
    Description: Amazon Connect instance ID
  ConnectInstanceAlias:
    Type: String
    Description: Amazon Connect instance alias
  ConnectLogGroup:
    Type: String
    Description: Amazon Connect log group
  CallRecordingsBucket:
    Type: String
    Description: Name of S3 bucket for call recordings
  StepFunctionRoleArn:
    Type: String
    Description: Role used for the step function
Resources:
  CallRecordingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: ${RegionPrefix}-${Stage}-call-recordings
      AttributeDefinitions:
      - AttributeName: ContactId
        AttributeType: S
      KeySchema:
      - AttributeName: ContactId
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
    Metadata:
      SamResourceId: CallRecordingTable
  CallRecordingsMonitoringBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: ${AccountAlias}-${RegionPrefix}-${Stage}-call-recordings-monitoring
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    Metadata:
      SamResourceId: CallRecordingsMonitoringBucket
  SubscriptionFilterFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AccountAlias}-${RegionPrefix}-${Stage}-subscription-filter-handler
      CodeUri: s3://sash-sam/monitor-recording-leakage/5ada50dac5627b4e371efdc4c8dc6424
      Handler: index.handler
      Role:
        Ref: LambdaRoleArn
      Environment:
        Variables:
          DDB_TABLE:
            Ref: CallRecordingTable
    Metadata:
      SamResourceId: SubscriptionFilterFunction
  SubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      LogGroupName:
        Ref: ConnectLogGroup
      DestinationArn:
        Fn::GetAtt:
        - SubscriptionFilterFunction
        - Arn
      FilterPattern: ''
      FilterName:
        Fn::Sub: ${AccountAlias}-${RegionPrefix}-${Stage}-subscription-filter
    Metadata:
      SamResourceId: SubscriptionFilter
  StartStateMachineFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AccountAlias}-${RegionPrefix}-${Stage}-start-state-machine
      CodeUri: s3://sash-sam/monitor-recording-leakage/49b4331017bc67ebf9f1427e97294ee5
      Handler: index.handler
      Role:
        Ref: LambdaRoleArn
      Environment:
        Variables:
          STATE_MACHINE_ARN:
            Ref: CallRecordingStateMachine
      Events:
        PerioidicInvoke:
          Type: ScheduleV2
          Properties:
            ScheduleExpression: cron(0/1 * * * ? *)
            State: ENABLED
    Metadata:
      SamResourceId: StartStateMachineFunction
  UpdateInitialisedRecordsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AccountAlias}-${RegionPrefix}-${Stage}-update-initialised-records
      CodeUri: s3://sash-sam/monitor-recording-leakage/89677482a10f5ce3e4d88eba87d0b897
      Handler: index.handler
      Role:
        Ref: LambdaRoleArn
      Environment:
        Variables:
          DDB_TABLE:
            Ref: CallRecordingTable
          CONNECT_ID:
            Ref: ConnectInstanceId
    Metadata:
      SamResourceId: UpdateInitialisedRecordsFunction
  CleanTableFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AccountAlias}-${RegionPrefix}-${Stage}-clean-table
      CodeUri: s3://sash-sam/monitor-recording-leakage/c37f0d42ee1b522abe8dbf9ef30dedf3
      Handler: index.handler
      Role:
        Ref: LambdaRoleArn
      Environment:
        Variables:
          DDB_TABLE:
            Ref: CallRecordingTable
    Metadata:
      SamResourceId: CleanTableFunction
  UpdateInProgressRecordsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AccountAlias}-${RegionPrefix}-${Stage}-update-in-progress
      CodeUri: s3://sash-sam/monitor-recording-leakage/3814e48392f970cf5f6473b379602bd2
      Handler: index.handler
      Role:
        Ref: LambdaRoleArn
      Environment:
        Variables:
          DDB_TABLE:
            Ref: CallRecordingTable
          CONNECT_ID:
            Ref: ConnectInstanceId
    Metadata:
      SamResourceId: UpdateInProgressRecordsFunction
  UpdateCompletedRecordsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AccountAlias}-${RegionPrefix}-${Stage}-update-completed
      CodeUri: s3://sash-sam/monitor-recording-leakage/50cd192fdc287dfaa4201e3cb6c85e96
      Handler: index.handler
      Role:
        Ref: LambdaRoleArn
      Environment:
        Variables:
          DDB_TABLE:
            Ref: CallRecordingTable
          RECORDING_BUCKET:
            Ref: CallRecordingsBucket
          CONNECT_ALIAS:
            Ref: ConnectInstanceAlias
    Metadata:
      SamResourceId: UpdateCompletedRecordsFunction
  ExportToS3Function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AccountAlias}-${RegionPrefix}-${Stage}-export-to-s3
      CodeUri: s3://sash-sam/monitor-recording-leakage/6a7a58f4a7984c774fbd5e6b330bbe5f
      Handler: index.handler
      Role:
        Ref: LambdaRoleArn
      Environment:
        Variables:
          TABLE_ARN:
            Fn::GetAtt:
            - CallRecordingTable
            - Arn
          EXPORT_BUCKET_NAME:
            Ref: CallRecordingsMonitoringBucket
      Events:
        ExportToS3Schedule:
          Type: ScheduleV2
          Properties:
            ScheduleExpression: cron(0/5 * * * ? *)
            State: ENABLED
    Metadata:
      SamResourceId: ExportToS3Function
  CallRecordingStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: STANDARD
      Name:
        Fn::Sub: ${AccountAlias}-${RegionPrefix}-${Stage}-call-recording-state-machine
      DefinitionUri:
        Bucket: sash-sam
        Key: monitor-recording-leakage/b6954937c458e031b89cbd75c27a077d
      Role:
        Ref: StepFunctionRoleArn
      DefinitionSubstitutions:
        UpdateInitialisedRecordsFunction:
          Fn::GetAtt:
          - UpdateInitialisedRecordsFunction
          - Arn
        CleanTableFunction:
          Fn::GetAtt:
          - CleanTableFunction
          - Arn
        UpdateInProgressRecordsFunction:
          Fn::GetAtt:
          - UpdateInProgressRecordsFunction
          - Arn
        UpdateCompletedRecordsFunction:
          Fn::GetAtt:
          - UpdateCompletedRecordsFunction
          - Arn
      Logging:
        Destinations:
        - CloudWatchLogsLogGroup:
            LogGroupArn:
              Fn::GetAtt:
              - CallRecordingStateMachineLogGroup
              - Arn
        IncludeExecutionData: true
        Level: ALL
    Metadata:
      SamResourceId: CallRecordingStateMachine
  CallRecordingStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/stepfunctions/call-recording-state-machine
      RetentionInDays: 7
    Metadata:
      SamResourceId: CallRecordingStateMachineLogGroup
  LambdaResourcePolicy:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - SubscriptionFilterFunction
        - Arn
      Principal: logs.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ConnectLogGroup}:*
    Metadata:
      SamResourceId: LambdaResourcePolicy
